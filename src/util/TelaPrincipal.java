/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package util;

import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import javax.swing.*;
import util.elementos.*;
import util.operacao.OperacaoMorfologica;

/**
 *
 * @author Gabriel
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private File arquivoDaImagem;
    private File arquivoDoElementoEstruturante;
    private Imagem imagem;
    private Imagem imagemDilatada;
    private Imagem imagemErodida;
    private Imagem imagemSuavizada;
    private Imagem imagemGradiente;
    private ElementoEstruturante ee;
    private boolean imagemCarregada = false;
    private boolean elementoEstruturanteCarregado = false;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        jPanelOperacoes.setVisible(false);
        jLabelConfirmacaoImagem.setVisible(false);
        jLabelConfirmacaoEE.setVisible(false);
        jButtonLimparImagem.setVisible(false);
        jButtonLimparEE.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanelPrincipal = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelImagem = new javax.swing.JLabel();
        jLabelEE = new javax.swing.JLabel();
        jTextFieldImagem = new javax.swing.JTextField();
        jTextFieldElementoEstruturante = new javax.swing.JTextField();
        jButtonImagem = new javax.swing.JButton();
        jButtonElementoEstruturante = new javax.swing.JButton();
        jLabelConfirmacaoImagem = new javax.swing.JLabel();
        jLabelConfirmacaoEE = new javax.swing.JLabel();
        jButtonLimparImagem = new javax.swing.JButton();
        jButtonLimparEE = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanelOperacoes = new javax.swing.JPanel();
        jLabelOperacoes = new javax.swing.JLabel();
        jButtonAbrirImagem = new javax.swing.JButton();
        jButtonDilatacao = new javax.swing.JButton();
        jButtonErosao = new javax.swing.JButton();
        jButtonSuavizacao = new javax.swing.JButton();
        jButtonGradiente = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldLimiteInferior = new javax.swing.JTextField();
        jTextFieldLimiteSuperior = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaRegioes = new javax.swing.JTextArea();
        jButtonContarRegioes = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitle.setText("Processamento de Imagens");

        jLabelImagem.setText("Imagem");

        jLabelEE.setText("Elemento Estruturante");

        jButtonImagem.setText("Escolher Arquivo");
        jButtonImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImagemActionPerformed(evt);
            }
        });

        jButtonElementoEstruturante.setText("Escolher Arquivo");
        jButtonElementoEstruturante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElementoEstruturanteActionPerformed(evt);
            }
        });

        jLabelConfirmacaoImagem.setText("OK");

        jLabelConfirmacaoEE.setText("OK");

        jButtonLimparImagem.setText("Limpar");
        jButtonLimparImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparImagemActionPerformed(evt);
            }
        });

        jButtonLimparEE.setText("Limpar");
        jButtonLimparEE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparEEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelImagem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelEE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                            .addComponent(jTextFieldElementoEstruturante))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                .addComponent(jButtonElementoEstruturante)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelConfirmacaoEE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonLimparEE))
                            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                .addComponent(jButtonImagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelConfirmacaoImagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonLimparImagem))))
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelConfirmacaoImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimparImagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldElementoEstruturante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonElementoEstruturante)
                    .addComponent(jLabelConfirmacaoEE)
                    .addComponent(jButtonLimparEE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabelOperacoes.setText("Operações Morfológicas");

        jButtonAbrirImagem.setText("Abrir Imagem");
        jButtonAbrirImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirImagemActionPerformed(evt);
            }
        });

        jButtonDilatacao.setText("Dilatação");
        jButtonDilatacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDilatacaoActionPerformed(evt);
            }
        });

        jButtonErosao.setText("Erosão");
        jButtonErosao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonErosaoActionPerformed(evt);
            }
        });

        jButtonSuavizacao.setText("Suavização");
        jButtonSuavizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuavizacaoActionPerformed(evt);
            }
        });

        jButtonGradiente.setText("Gradiente");
        jButtonGradiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGradienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Contar Regiões");

        jLabel2.setText("Limite Inferior: ");

        jLabel3.setText("Limite Superior:");

        jTextAreaRegioes.setColumns(20);
        jTextAreaRegioes.setRows(5);
        jScrollPane2.setViewportView(jTextAreaRegioes);

        jButtonContarRegioes.setText("Contar");
        jButtonContarRegioes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContarRegioesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperacoesLayout = new javax.swing.GroupLayout(jPanelOperacoes);
        jPanelOperacoes.setLayout(jPanelOperacoesLayout);
        jPanelOperacoesLayout.setHorizontalGroup(
            jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                        .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonAbrirImagem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelOperacoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDilatacao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonErosao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSuavizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonGradiente, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                        .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelOperacoesLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldLimiteSuperior))
                            .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldLimiteInferior))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonContarRegioes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOperacoesLayout.setVerticalGroup(
            jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabelOperacoes)
                .addGap(18, 18, 18)
                .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAbrirImagem)
                    .addComponent(jButtonDilatacao)
                    .addComponent(jButtonErosao)
                    .addComponent(jButtonGradiente)
                    .addComponent(jButtonSuavizacao))
                .addGap(28, 28, 28)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelOperacoesLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldLimiteInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldLimiteSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonContarRegioes)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelOperacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelOperacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImagemActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(new File("./images"));
        int status = chooser.showOpenDialog(new Frame());
        switch (status) {
            case JFileChooser.APPROVE_OPTION:
                arquivoDaImagem = chooser.getSelectedFile();
                jTextFieldImagem.setText(arquivoDaImagem.getName());
                jLabelConfirmacaoImagem.setVisible(true);
                jPanelOperacoes.setVisible(true);
                imagem = new Imagem();
                imagemCarregada = imagem.carregarImagem(arquivoDaImagem);
                jButtonLimparImagem.setVisible(true);
                if (!imagemCarregada) {
                    JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carregada!");
                }
                break;
        }
    }//GEN-LAST:event_jButtonImagemActionPerformed

    private void jButtonElementoEstruturanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElementoEstruturanteActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(new File("./images"));
        int status = chooser.showOpenDialog(new Frame());
        switch (status) {
            case JFileChooser.APPROVE_OPTION:
                arquivoDoElementoEstruturante = chooser.getSelectedFile();
                jTextFieldElementoEstruturante.setText(arquivoDoElementoEstruturante.getName());
                jLabelConfirmacaoEE.setVisible(true);
                ee = new ElementoEstruturante();
                elementoEstruturanteCarregado = ee.carregarElementoEstruturante(arquivoDoElementoEstruturante);
                jButtonLimparEE.setVisible(true);
                if (!elementoEstruturanteCarregado) {
                    JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não foi carregado!");
                }
                break;
        }
    }//GEN-LAST:event_jButtonElementoEstruturanteActionPerformed

    private void jButtonAbrirImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirImagemActionPerformed
        // TODO add your handling code here:
        if (arquivoDaImagem != null && imagemCarregada) {
            abrirImagemPGM(imagem, null, null, "");
        } else {
            JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carregada!");
        }

    }//GEN-LAST:event_jButtonAbrirImagemActionPerformed

    private void jButtonDilatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDilatacaoActionPerformed
        // TODO add your handling code here:
        if (imagem != null && ee != null && imagemCarregada && elementoEstruturanteCarregado) {
            String path = arquivoDaImagem.getName().replace(".pgm", "") + "_Dilatada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
            if (!new File(arquivoDaImagem.getPath().replace(".pgm", "_Dilatada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "") + ".pgm")).exists()) {
                imagemDilatada = OperacaoMorfologica.dilatar(imagem, ee);
                String name = arquivoDaImagem.getName() + "_Dilatada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
                abrirImagemPGM(imagemDilatada, path, name, " Dilatada");
            } else {
                abrirImagemPGM(imagemDilatada, null, null, " Dilatada");
            }
        } else if (!elementoEstruturanteCarregado) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        } else if (imagem == null) {
            JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carrergada!");
        } else if (ee == null) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        }
    }//GEN-LAST:event_jButtonDilatacaoActionPerformed

    private void jButtonErosaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonErosaoActionPerformed
        // TODO add your handling code here:
        if (imagem != null && ee != null && imagemCarregada && elementoEstruturanteCarregado) {
            String path = arquivoDaImagem.getName().replace(".pgm", "") + "_Erodida_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
            if (!new File(arquivoDaImagem.getPath().replace(".pgm", "_Erodida_" + arquivoDoElementoEstruturante.getName().replace(".ee", "") + ".pgm")).exists()) {
                imagemErodida = OperacaoMorfologica.erodir(imagem, ee);
                String name = arquivoDaImagem.getName() + "_Erodida_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
                abrirImagemPGM(imagemErodida, path, name, " Erodida");
            } else {
                abrirImagemPGM(imagemErodida, null, null, " Erodida");
            }
        } else if (!elementoEstruturanteCarregado) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        } else if (imagem == null) {
            JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carrergada!");
        } else if (ee == null) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        }
    }//GEN-LAST:event_jButtonErosaoActionPerformed

    private void jButtonSuavizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuavizacaoActionPerformed
        // TODO add your handling code here:
        if (imagem != null && ee != null && imagemCarregada && elementoEstruturanteCarregado) {
            String path = arquivoDaImagem.getName().replace(".pgm", "") + "_Suavizada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
            if (!new File(arquivoDaImagem.getPath().replace(".pgm", "_Suavizada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "") + ".pgm")).exists()) {
                imagemSuavizada = OperacaoMorfologica.suavizacao(imagem, ee);
                String name = arquivoDaImagem.getName() + "_Suavizada_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
                abrirImagemPGM(imagemSuavizada, path, name, " Suavizada");
            } else {
                abrirImagemPGM(imagemSuavizada, null, null, " Suavizada");
            }
        } else if (!elementoEstruturanteCarregado) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        } else if (imagem == null) {
            JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carrergada!");
        } else if (ee == null) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        }
    }//GEN-LAST:event_jButtonSuavizacaoActionPerformed

    private void jButtonGradienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGradienteActionPerformed
        // TODO add your handling code here:
        if (imagem != null && ee != null && imagemCarregada && elementoEstruturanteCarregado) {
            String path = arquivoDaImagem.getName().replace(".pgm", "") + "_Gradiente_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
            if (!new File(arquivoDaImagem.getPath().replace(".pgm", "_Gradiente_" + arquivoDoElementoEstruturante.getName().replace(".ee", "") + ".pgm")).exists()) {
                imagemGradiente = OperacaoMorfologica.gradiente(imagem, ee);
                String name = arquivoDaImagem.getName() + "_Gradiente_" + arquivoDoElementoEstruturante.getName().replace(".ee", "");
                abrirImagemPGM(imagemGradiente, path, name, " Gradiente");
            } else {
                abrirImagemPGM(imagemGradiente, null, null, " Gradiente");
            }
        } else if (!elementoEstruturanteCarregado) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        } else if (imagem == null) {
            JOptionPane.showMessageDialog(new Frame(), "Imagem não foi carrergada!");
        } else if (ee == null) {
            JOptionPane.showMessageDialog(new Frame(), "Elemento estruturante não carregado!");
        }
    }//GEN-LAST:event_jButtonGradienteActionPerformed

    private void jButtonLimparImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparImagemActionPerformed
        // TODO add your handling code here:
        imagem = null;
        imagemDilatada = null;
        imagemErodida = null;
        imagemSuavizada = null;
        imagemGradiente = null;
        arquivoDaImagem = null;
        jTextFieldImagem.setText(null);
        jLabelConfirmacaoImagem.setVisible(false);
        jButtonLimparImagem.setVisible(false);
        //jTextAreaRegioes.setText(null);
    }//GEN-LAST:event_jButtonLimparImagemActionPerformed

    private void jButtonLimparEEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparEEActionPerformed
        // TODO add your handling code here:
        ee = null;
        arquivoDoElementoEstruturante = null;
        jTextFieldElementoEstruturante.setText(null);
        jLabelConfirmacaoEE.setVisible(false);
        jButtonLimparEE.setVisible(false);
    }//GEN-LAST:event_jButtonLimparEEActionPerformed

    private void jButtonContarRegioesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContarRegioesActionPerformed
        // TODO add your handling code here:
        int limiteInferior = Integer.parseInt(jTextFieldLimiteInferior.getText());
        int limiteSuperior = Integer.parseInt(jTextFieldLimiteSuperior.getText());
        if(limiteInferior <= limiteSuperior){
            if(limiteInferior < 0) limiteInferior = 0;
            if(limiteSuperior > 255) limiteSuperior = 255;
            String text = arquivoDaImagem.getName() + "\n"
                    + imagem.contaRegioes(limiteInferior, limiteSuperior) + " regiões"
                    + "\n" + "entre " + limiteInferior + " e " + limiteSuperior;
            jTextAreaRegioes.setText(text);
        } else {
            JOptionPane.showMessageDialog(new Frame(), "Limites inválidos");
        }
    }//GEN-LAST:event_jButtonContarRegioesActionPerformed

    private void abrirImagemPGM(final Imagem imagem, final String path, final String name, String operacao) {
        JFrame frame = new JFrame("PGM Image: " + arquivoDaImagem.getName() + operacao);
        ImagemPGM img = new ImagemPGM(imagem.getImagem());
        frame.add(img);
        frame.pack();

        JMenuBar menuBar = new JMenuBar();
        JMenu menu = new JMenu();
        JMenuItem itemSalvar = new JMenuItem();

        menu.setText("File");
        itemSalvar.setText("Salvar");
        itemSalvar.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (path != null && name != null) {
                    boolean status = imagem.criaImagem(path, name);
                    if (status) {
                        JOptionPane.showMessageDialog(new Frame(), "Imagem foi criada com sucesso");
                    } else {
                        JOptionPane.showMessageDialog(new Frame(), "Imagem não foi criada");
                    }
                } else {
                    JOptionPane.showMessageDialog(new Frame(), "Imagem já existe");
                }
            }
        });
        menu.add(itemSalvar);
        menuBar.add(menu);

        frame.setJMenuBar(menuBar);

        frame.pack();

        frame.setBounds(img.getBounds());
        frame.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbrirImagem;
    private javax.swing.JButton jButtonContarRegioes;
    private javax.swing.JButton jButtonDilatacao;
    private javax.swing.JButton jButtonElementoEstruturante;
    private javax.swing.JButton jButtonErosao;
    private javax.swing.JButton jButtonGradiente;
    private javax.swing.JButton jButtonImagem;
    private javax.swing.JButton jButtonLimparEE;
    private javax.swing.JButton jButtonLimparImagem;
    private javax.swing.JButton jButtonSuavizacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelConfirmacaoEE;
    private javax.swing.JLabel jLabelConfirmacaoImagem;
    private javax.swing.JLabel jLabelEE;
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JLabel jLabelOperacoes;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanelOperacoes;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextAreaRegioes;
    private javax.swing.JTextField jTextFieldElementoEstruturante;
    private javax.swing.JTextField jTextFieldImagem;
    private javax.swing.JTextField jTextFieldLimiteInferior;
    private javax.swing.JTextField jTextFieldLimiteSuperior;
    // End of variables declaration//GEN-END:variables
}
